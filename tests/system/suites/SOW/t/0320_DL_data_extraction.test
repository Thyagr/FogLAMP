#!/bin/bash
##############################################################################
#
# FogLAMP SOW Acceptance Criteria test
# Copyright (C) 2018 Dianomic Systems, Inc.
#
##############################################################################

##############################################################################
#
## This script is used to run SOW Acceptance Criteria tests related to
## 'Data Logic'
#
##############################################################################

# Global constants declaration
declare EXECUTION_ENV
declare SUITE_BASEDIR
declare TEST_BASEDIR
declare RESULT_DIR
declare TEST_NAME

declare FOGLAMP_SERVER
declare FOGLAMP_HTTPPort
declare FOGLAMP_SNAP_VERSION
declare FOGLAMP_SNAP_UPDATE_VERSION
declare FOGLAMP_NAME
declare FOGLAMP_SNAP
declare FOGLAMP_PORT
declare SENDING_PROCESS_DATA
declare SCHEDULE_ID_OMF_PLUGIN

declare PI_SERVER
declare PI_SERVER_PORT
declare OMF_PRODUCER_TOKEN
declare OMF_TYPE_ID

declare SNAPS_DIRECTORY

declare ASSET_CODE
declare RETRY_COUNT

declare FOGLAMP_ROOT
declare FOGLAMP_AVAHI_STRING
declare CMD_JQ
declare CMD_AVBROWSE
declare CMD_CURL

export TEST_ID="${TEST_NAME:0:4}"

# Reads configuration setting
source ${SUITE_BASEDIR}/suite.cfg

if [[ "${EXECUTION_ENV}" == "userver" ]]; then

    echo ERROR : Test not implemented for the Ubuntu Server environment.
    exit 1
fi

# Ensures FogLAMP is stopped
$TEST_BASEDIR/bash/exec_any_foglamp_command.bash stop                                                                   >>  ${RESULT_DIR}/$TEST_NAME.1.temp 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
$TEST_BASEDIR/bash/exec_any_foglamp_command.bash kill                                                                   >>  ${RESULT_DIR}/$TEST_NAME.1.temp 2>> ${RESULT_DIR}/$TEST_NAME.2.temp

#
# Starts, configures FogLAMP and tests the communication with the PI Server using OMF.
#
$TEST_BASEDIR/bash/exec_any_foglamp_command.bash start                                                                  > ${RESULT_DIR}/$TEST_NAME.0.temp 2>&1
tail -n1 ${RESULT_DIR}/$TEST_NAME.0.temp

# Configures FogLAMP for the communication with the PI Server using OMF.
$TEST_BASEDIR/bash/OMF_configure.bash

#
# Injects data into FogLAMP
#
echo '[{"name":"'${ASSET_CODE}_${TEST_ID}'","sensor_values":[{"name":"sensor","type":"number","min":10,"max":10,"precision":0}]}]' >   $RESULT_DIR/$TEST_NAME.801.temp 2>&1
$TEST_BASEDIR/bash/inject_fogbench_data.bash -t $RESULT_DIR/$TEST_NAME.801.temp                                         >>  $RESULT_DIR/$TEST_NAME.1.temp 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
grep '^Total Messages Transferred: ' $RESULT_DIR/$TEST_NAME.1.temp

$TEST_BASEDIR/bash/sleep.bash 10

# Waits until either the data is available in the PI server or it reaches the timeout.
$TEST_BASEDIR/bash/OMF_wait_data.bash full ${OMF_PRODUCER_TOKEN} ${ASSET_CODE}_${TEST_ID}

#
# Test tear-down
#
$TEST_BASEDIR/bash/exec_any_foglamp_command.bash stop                                                                   >>  ${RESULT_DIR}/$TEST_NAME.1.temp 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
$TEST_BASEDIR/bash/exec_any_foglamp_command.bash kill                                                                   >>  ${RESULT_DIR}/$TEST_NAME.1.temp 2>> ${RESULT_DIR}/$TEST_NAME.2.temp
